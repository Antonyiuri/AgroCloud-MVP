{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\AgroChat\\\\projeto\\\\frontend\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport useSmartAPI from '../hooks/useSmartAPI';\nimport AIComponentFactory from '../services/AIComponentFactory';\nimport SmartInput from './SmartInput';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst aiModel = {\n  optimizeChatUI: async ({\n    messages,\n    userBehavior,\n    deviceType,\n    timeOfDay\n  }) => {\n    // Mock AI chat UI optimization\n    console.log('AI optimizing chat UI');\n    return {\n      background: 'linear-gradient(135deg, #f0fdf4, #dcfce7)',\n      borderRadius: '20px',\n      padding: '24px',\n      shadow: '0 20px 50px rgba(0,0,0,0.1)'\n    };\n  }\n};\nconst SmartChatbot = () => {\n  _s();\n  const {\n    data: chatResponse,\n    fetch: sendMessage\n  } = useSmartAPI('chat');\n  const [messages, setMessages] = useState([]);\n  const [uiOptimizations, setUIOptimizations] = useState({});\n\n  // IA otimiza a UI baseado no contexto da conversa\n  useEffect(() => {\n    const optimizeUI = async () => {\n      const optimizations = await aiModel.optimizeChatUI({\n        messages: messages,\n        userBehavior: 'someUserBehavior',\n        // Replace with actual user behavior tracking\n        deviceType: 'desktop',\n        // Replace with actual device type detection\n        timeOfDay: new Date().getHours()\n      });\n      setUIOptimizations(optimizations);\n    };\n    optimizeUI();\n  }, [messages]);\n  const handleSend = async input => {\n    await sendMessage({\n      message: input\n    });\n    setMessages([...messages, {\n      text: input,\n      type: 'user'\n    }]);\n  };\n  useEffect(() => {\n    if (chatResponse && chatResponse.response) {\n      setMessages([...messages, {\n        text: chatResponse.response,\n        type: 'ai'\n      }]);\n    }\n  }, [chatResponse]);\n  const StyledChatContainer = styled.div`\n    background: ${uiOptimizations.background || 'linear-gradient(135deg, #f0fdf4, #dcfce7)'};\n    border-radius: ${uiOptimizations.borderRadius || '20px'};\n    padding: ${uiOptimizations.padding || '24px'};\n    box-shadow: ${uiOptimizations.shadow || '0 20px 50px rgba(0,0,0,0.1)'};\n    backdrop-filter: blur(10px);\n    border: 1px solid rgba(255,255,255,0.2);\n    width: 500px;\n    margin: 20px auto;\n  `;\n  const ChatHeader = styled.div`\n    font-size: 24px;\n    font-weight: bold;\n    color: #333;\n    margin-bottom: 20px;\n    text-align: center;\n  `;\n  const MessageList = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    margin-bottom: 20px;\n  `;\n  const Message = styled.div`\n    padding: 10px 15px;\n    border-radius: 20px;\n    background: #e2e8f0;\n    color: #333;\n    align-self: flex-start;\n\n    &.user {\n      align-self: flex-end;\n      background: #22c55e;\n      color: white;\n    }\n  `;\n  return /*#__PURE__*/_jsxDEV(StyledChatContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n      children: \"AgroChat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageList, {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(Message, {\n        className: msg.type,\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SmartInput, {\n      onSend: handleSend\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(SmartChatbot, \"yCukKxLBcxKQL6Ir0E7FOrlHO+M=\", false, function () {\n  return [useSmartAPI];\n});\n_c = SmartChatbot;\nexport default SmartChatbot;\nvar _c;\n$RefreshReg$(_c, \"SmartChatbot\");","map":{"version":3,"names":["React","useState","useEffect","styled","useSmartAPI","AIComponentFactory","SmartInput","jsxDEV","_jsxDEV","aiModel","optimizeChatUI","messages","userBehavior","deviceType","timeOfDay","console","log","background","borderRadius","padding","shadow","SmartChatbot","_s","data","chatResponse","fetch","sendMessage","setMessages","uiOptimizations","setUIOptimizations","optimizeUI","optimizations","Date","getHours","handleSend","input","message","text","type","response","StyledChatContainer","div","ChatHeader","MessageList","Message","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","className","onSend","_c","$RefreshReg$"],"sources":["C:/Users/anton/OneDrive/Área de Trabalho/AgroChat/projeto/frontend/src/components/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport useSmartAPI from '../hooks/useSmartAPI';\r\nimport AIComponentFactory from '../services/AIComponentFactory';\r\nimport SmartInput from './SmartInput';\r\nimport './Chatbot.css';\r\n\r\nconst aiModel = {\r\n  optimizeChatUI: async ({ messages, userBehavior, deviceType, timeOfDay }) => {\r\n    // Mock AI chat UI optimization\r\n    console.log('AI optimizing chat UI');\r\n    return {\r\n      background: 'linear-gradient(135deg, #f0fdf4, #dcfce7)',\r\n      borderRadius: '20px',\r\n      padding: '24px',\r\n      shadow: '0 20px 50px rgba(0,0,0,0.1)',\r\n    };\r\n  },\r\n};\r\n\r\nconst SmartChatbot = () => {\r\n  const { data: chatResponse, fetch: sendMessage } = useSmartAPI('chat');\r\n  const [messages, setMessages] = useState([]);\r\n  const [uiOptimizations, setUIOptimizations] = useState({});\r\n\r\n  // IA otimiza a UI baseado no contexto da conversa\r\n  useEffect(() => {\r\n    const optimizeUI = async () => {\r\n      const optimizations = await aiModel.optimizeChatUI({\r\n        messages: messages,\r\n        userBehavior: 'someUserBehavior', // Replace with actual user behavior tracking\r\n        deviceType: 'desktop', // Replace with actual device type detection\r\n        timeOfDay: new Date().getHours(),\r\n      });\r\n\r\n      setUIOptimizations(optimizations);\r\n    };\r\n\r\n    optimizeUI();\r\n  }, [messages]);\r\n\r\n  const handleSend = async (input) => {\r\n      await sendMessage({ message: input });\r\n      setMessages([...messages, { text: input, type: 'user' }]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (chatResponse && chatResponse.response) {\r\n      setMessages([...messages, { text: chatResponse.response, type: 'ai' }]);\r\n    }\r\n  }, [chatResponse]);\r\n\r\n  const StyledChatContainer = styled.div`\r\n    background: ${uiOptimizations.background || 'linear-gradient(135deg, #f0fdf4, #dcfce7)'};\r\n    border-radius: ${uiOptimizations.borderRadius || '20px'};\r\n    padding: ${uiOptimizations.padding || '24px'};\r\n    box-shadow: ${uiOptimizations.shadow || '0 20px 50px rgba(0,0,0,0.1)'};\r\n    backdrop-filter: blur(10px);\r\n    border: 1px solid rgba(255,255,255,0.2);\r\n    width: 500px;\r\n    margin: 20px auto;\r\n  `;\r\n\r\n  const ChatHeader = styled.div`\r\n    font-size: 24px;\r\n    font-weight: bold;\r\n    color: #333;\r\n    margin-bottom: 20px;\r\n    text-align: center;\r\n  `;\r\n\r\n  const MessageList = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n    margin-bottom: 20px;\r\n  `;\r\n\r\n  const Message = styled.div`\r\n    padding: 10px 15px;\r\n    border-radius: 20px;\r\n    background: #e2e8f0;\r\n    color: #333;\r\n    align-self: flex-start;\r\n\r\n    &.user {\r\n      align-self: flex-end;\r\n      background: #22c55e;\r\n      color: white;\r\n    }\r\n  `;\r\n\r\n  return (\r\n    <StyledChatContainer>\r\n      <ChatHeader>AgroChat</ChatHeader>\r\n      <MessageList>\r\n        {messages.map((msg, index) => (\r\n          <Message key={index} className={msg.type}>{msg.text}</Message>\r\n        ))}\r\n      </MessageList>\r\n      <SmartInput onSend={handleSend} />\r\n    </StyledChatContainer>\r\n  );\r\n};\r\n\r\nexport default SmartChatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}