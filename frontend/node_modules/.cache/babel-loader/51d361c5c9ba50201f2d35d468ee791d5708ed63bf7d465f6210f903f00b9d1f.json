{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\AgroChat\\\\projeto\\\\frontend\\\\src\\\\components\\\\AgroBot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Send, Bot, User } from 'lucide-react';\nimport './AgroBot.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AgroBot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const API_ENDPOINT = 'http://localhost:5000/ask'; // Replace with your actual API endpoint\n\n  const handleSendMessage = async () => {\n    if (!inputValue.trim()) return;\n    const userMessage = {\n      id: Date.now(),\n      text: inputValue,\n      type: 'user',\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInputValue('');\n    setIsTyping(true);\n    try {\n      const response = await fetch(API_ENDPOINT, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          pergunta: inputValue\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        const botResponse = {\n          id: Date.now() + 1,\n          text: data.resposta,\n          type: 'bot',\n          timestamp: new Date()\n        };\n        setMessages(prev => [...prev, botResponse]);\n      } else {\n        const botResponse = {\n          id: Date.now() + 1,\n          text: `Erro: ${data.erro}`,\n          type: 'bot',\n          timestamp: new Date()\n        };\n        setMessages(prev => [...prev, botResponse]);\n      }\n    } catch (error) {\n      const botResponse = {\n        id: Date.now() + 1,\n        text: `Erro: ${error.message}`,\n        type: 'bot',\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, botResponse]);\n    } finally {\n      setIsTyping(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  const formatTime = date => {\n    return date.toLocaleTimeString('pt-BR', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"agrobot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-area\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.type === 'user' ? 'user-message' : 'bot-message'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"message-text\",\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"message-time\",\n            children: formatTime(message.timestamp)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-avatar\",\n          children: message.type === 'user' ? /*#__PURE__*/_jsxDEV(User, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 42\n          }, this) : /*#__PURE__*/_jsxDEV(Bot, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 63\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typing-indicator\",\n        children: \"AgroBot est\\xE1 digitando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value),\n        onKeyPress: handleKeyPress,\n        placeholder: \"Digite sua pergunta sobre agricultura...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        disabled: !inputValue.trim() || isTyping,\n        children: /*#__PURE__*/_jsxDEV(Send, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(AgroBot, \"cRRYpBlPxh6tLuvboMzIORS8wrI=\");\n_c = AgroBot;\nexport default AgroBot;\nvar _c;\n$RefreshReg$(_c, \"AgroBot\");","map":{"version":3,"names":["React","useState","Send","Bot","User","jsxDEV","_jsxDEV","AgroBot","_s","messages","setMessages","inputValue","setInputValue","isTyping","setIsTyping","API_ENDPOINT","handleSendMessage","trim","userMessage","id","Date","now","text","type","timestamp","prev","response","fetch","method","headers","body","JSON","stringify","pergunta","data","json","ok","botResponse","resposta","erro","error","message","handleKeyPress","e","key","shiftKey","preventDefault","formatTime","date","toLocaleTimeString","hour","minute","className","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","size","value","onChange","target","onKeyPress","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/anton/OneDrive/Área de Trabalho/AgroChat/projeto/frontend/src/components/AgroBot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Send, Bot, User } from 'lucide-react';\r\nimport './AgroBot.css'; // Import the CSS file\r\n\r\nconst AgroBot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [isTyping, setIsTyping] = useState(false);\r\n\r\n  const API_ENDPOINT = 'http://localhost:5000/ask'; // Replace with your actual API endpoint\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!inputValue.trim()) return;\r\n\r\n    const userMessage = {\r\n      id: Date.now(),\r\n      text: inputValue,\r\n      type: 'user',\r\n      timestamp: new Date()\r\n    };\r\n\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInputValue('');\r\n    setIsTyping(true);\r\n\r\n    try {\r\n      const response = await fetch(API_ENDPOINT, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ pergunta: inputValue })\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        const botResponse = {\r\n          id: Date.now() + 1,\r\n          text: data.resposta,\r\n          type: 'bot',\r\n          timestamp: new Date()\r\n        };\r\n        setMessages(prev => [...prev, botResponse]);\r\n      } else {\r\n        const botResponse = {\r\n          id: Date.now() + 1,\r\n          text: `Erro: ${data.erro}`,\r\n          type: 'bot',\r\n          timestamp: new Date()\r\n        };\r\n        setMessages(prev => [...prev, botResponse]);\r\n      }\r\n    } catch (error) {\r\n      const botResponse = {\r\n        id: Date.now() + 1,\r\n        text: `Erro: ${error.message}`,\r\n        type: 'bot',\r\n        timestamp: new Date()\r\n      };\r\n      setMessages(prev => [...prev, botResponse]);\r\n    } finally {\r\n      setIsTyping(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  const formatTime = (date) => {\r\n    return date.toLocaleTimeString('pt-BR', { \r\n      hour: '2-digit', \r\n      minute: '2-digit' \r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"agrobot-container\">\r\n      <div className=\"messages-area\">\r\n        {messages.map((message, index) => (\r\n          <div\r\n            key={message.id}\r\n            className={`message ${message.type === 'user' ? 'user-message' : 'bot-message'}`}\r\n          >\r\n            <div className=\"message-content\">\r\n              <p className=\"message-text\">{message.text}</p>\r\n              <p className=\"message-time\">{formatTime(message.timestamp)}</p>\r\n            </div>\r\n            <div className=\"message-avatar\">\r\n              {message.type === 'user' ? <User size={20} /> : <Bot size={20} />}\r\n            </div>\r\n          </div>\r\n        ))}\r\n        {isTyping && <div className=\"typing-indicator\">AgroBot está digitando...</div>}\r\n      </div>\r\n      <div className=\"input-area\">\r\n        <textarea\r\n          value={inputValue}\r\n          onChange={(e) => setInputValue(e.target.value)}\r\n          onKeyPress={handleKeyPress}\r\n          placeholder=\"Digite sua pergunta sobre agricultura...\"\r\n        />\r\n        <button onClick={handleSendMessage} disabled={!inputValue.trim() || isTyping}>\r\n          <Send size={20} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AgroBot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}