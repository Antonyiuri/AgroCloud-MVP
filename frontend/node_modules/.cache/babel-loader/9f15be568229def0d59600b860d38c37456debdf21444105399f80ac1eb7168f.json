{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\AgroChat\\\\projeto\\\\frontend\\\\src\\\\components\\\\Chatbot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [pergunta, setPergunta] = useState('');\n  const [mensagens, setMensagens] = useState([]);\n  const enviarPergunta = async () => {\n    if (!pergunta.trim()) return;\n    const novaPergunta = {\n      texto: pergunta,\n      autor: 'usuário'\n    };\n    setMensagens(msgs => [...msgs, novaPergunta]);\n    setPergunta('');\n    try {\n      const response = await fetch('http://localhost:5000/ask', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          pergunta\n        })\n      });\n      const data = await response.json();\n      const respostaBot = {\n        texto: data.resposta || 'Erro na resposta.',\n        autor: 'bot'\n      };\n      setMensagens(msgs => [...msgs, respostaBot]);\n    } catch (error) {\n      setMensagens(msgs => [...msgs, {\n        texto: 'Erro ao conectar com o servidor.',\n        autor: 'bot'\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"\\uD83E\\uDD16 \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"AgroBot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 16\n        }, this), \" - Consultoria para Caf\\xE9\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-box\",\n        children: mensagens.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `mensagem ${msg.autor}`,\n          children: msg.texto\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: pergunta,\n          onChange: e => setPergunta(e.target.value),\n          placeholder: \"Digite sua pergunta sobre caf\\xE9...\",\n          onKeyDown: e => e.key === 'Enter' && enviarPergunta()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: enviarPergunta,\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"0gI8VPi8SQdgNTBoj49KF+JMdY0=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbot","_s","pergunta","setPergunta","mensagens","setMensagens","enviarPergunta","trim","novaPergunta","texto","autor","msgs","response","fetch","method","headers","body","JSON","stringify","data","json","respostaBot","resposta","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","i","type","value","onChange","e","target","placeholder","onKeyDown","key","onClick","_c","$RefreshReg$"],"sources":["C:/Users/anton/OneDrive/Área de Trabalho/AgroChat/projeto/frontend/src/components/Chatbot.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Chatbot.css';\r\n\r\nconst Chatbot = () => {\r\n  const [pergunta, setPergunta] = useState('');\r\n  const [mensagens, setMensagens] = useState([]);\r\n\r\n  const enviarPergunta = async () => {\r\n    if (!pergunta.trim()) return;\r\n\r\n    const novaPergunta = { texto: pergunta, autor: 'usuário' };\r\n    setMensagens((msgs) => [...msgs, novaPergunta]);\r\n    setPergunta('');\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/ask', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ pergunta })\r\n      });\r\n\r\n      const data = await response.json();\r\n      const respostaBot = { texto: data.resposta || 'Erro na resposta.', autor: 'bot' };\r\n      setMensagens((msgs) => [...msgs, respostaBot]);\r\n\r\n    } catch (error) {\r\n      setMensagens((msgs) => [...msgs, { texto: 'Erro ao conectar com o servidor.', autor: 'bot' }]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-wrapper\">\r\n      <div className=\"chat-card\">\r\n        <h2>🤖 <span>AgroBot</span> - Consultoria para Café</h2>\r\n\r\n        <div className=\"chat-box\">\r\n          {mensagens.map((msg, i) => (\r\n            <div key={i} className={`mensagem ${msg.autor}`}>\r\n              {msg.texto}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"input-area\">\r\n          <input\r\n            type=\"text\"\r\n            value={pergunta}\r\n            onChange={(e) => setPergunta(e.target.value)}\r\n            placeholder=\"Digite sua pergunta sobre café...\"\r\n            onKeyDown={(e) => e.key === 'Enter' && enviarPergunta()}\r\n          />\r\n          <button onClick={enviarPergunta}>Enviar</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}