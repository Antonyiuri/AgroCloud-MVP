{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\AgroChat\\\\projeto\\\\frontend\\\\src\\\\components\\\\IrrigationDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport useSmartAPI from '../hooks/useSmartAPI';\nimport SmartChart from './SmartChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst aiModel = {\n  createDashboard: async ({\n    data,\n    style,\n    priority,\n    responsiveness\n  }) => {\n    // Mock AI dashboard creation\n    console.log('AI creating dashboard');\n    return {\n      grid: '1fr 1fr',\n      widgets: [{\n        id: 'sensor-data',\n        title: 'Sensor Data',\n        dataSource: 'sensors',\n        visualization: 'table',\n        aiStyling: {\n          background: '#f0fdf4',\n          borderRadius: '12px',\n          padding: '16px',\n          shadow: '0 4px 6px rgba(0,0,0,0.1)'\n        }\n      }, {\n        id: 'irrigation-data',\n        title: 'Irrigation Data',\n        dataSource: 'irrigation',\n        visualization: 'chart',\n        aiStyling: {\n          background: '#e5e7eb',\n          borderRadius: '12px',\n          padding: '16px',\n          shadow: '0 4px 6px rgba(0,0,0,0.1)'\n        }\n      }]\n    };\n  }\n};\nconst AIDashboard = () => {\n  _s();\n  const {\n    data: sensorData\n  } = useSmartAPI('sensors');\n  const {\n    data: irrigationData\n  } = useSmartAPI('irrigation');\n  const [dashboardLayout, setDashboardLayout] = useState(null);\n  useEffect(() => {\n    const generateDashboard = async () => {\n      const layout = await aiModel.createDashboard({\n        data: {\n          sensors: sensorData,\n          irrigation: irrigationData\n        },\n        style: 'modern_agricultural',\n        priority: 'visual_impact',\n        responsiveness: 'mobile_first'\n      });\n      setDashboardLayout(layout);\n    };\n    if (sensorData && irrigationData) {\n      generateDashboard();\n    }\n  }, [sensorData, irrigationData]);\n  if (!dashboardLayout) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 32\n  }, this);\n  const DashboardGrid = styled.div`\n    display: grid;\n    grid-template-columns: ${dashboardLayout.grid};\n    gap: 20px;\n    padding: 20px;\n  `;\n  const AIWidget = ({\n    config,\n    data,\n    styling\n  }) => {\n    const StyledWidget = styled.div`\n      background: ${styling.background};\n      border-radius: ${styling.borderRadius};\n      padding: ${styling.padding};\n      box-shadow: ${styling.shadow};\n      transition: all 0.3s ease;\n\n      &:hover {\n        transform: scale(1.02);\n        box-shadow: 0 6px 8px rgba(0,0,0,0.15);\n      }\n    `;\n    return /*#__PURE__*/_jsxDEV(StyledWidget, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: config.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), config.visualization === 'chart' ? /*#__PURE__*/_jsxDEV(SmartChart, {\n        data: data,\n        context: config.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this) : data && JSON.stringify(data)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(DashboardGrid, {\n    children: dashboardLayout.widgets.map(widget => /*#__PURE__*/_jsxDEV(AIWidget, {\n      config: widget,\n      data: widget.dataSource === 'sensors' ? sensorData : irrigationData,\n      styling: widget.aiStyling\n    }, widget.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(AIDashboard, \"uEbMSzPJR9gMNR7mmooUYuHDBUo=\", false, function () {\n  return [useSmartAPI, useSmartAPI];\n});\n_c = AIDashboard;\nexport default AIDashboard;\nvar _c;\n$RefreshReg$(_c, \"AIDashboard\");","map":{"version":3,"names":["React","useState","useEffect","styled","useSmartAPI","SmartChart","jsxDEV","_jsxDEV","aiModel","createDashboard","data","style","priority","responsiveness","console","log","grid","widgets","id","title","dataSource","visualization","aiStyling","background","borderRadius","padding","shadow","AIDashboard","_s","sensorData","irrigationData","dashboardLayout","setDashboardLayout","generateDashboard","layout","sensors","irrigation","children","fileName","_jsxFileName","lineNumber","columnNumber","DashboardGrid","div","AIWidget","config","styling","StyledWidget","context","JSON","stringify","map","widget","_c","$RefreshReg$"],"sources":["C:/Users/anton/OneDrive/Área de Trabalho/AgroChat/projeto/frontend/src/components/IrrigationDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport useSmartAPI from '../hooks/useSmartAPI';\r\nimport SmartChart from './SmartChart';\r\n\r\nconst aiModel = {\r\n  createDashboard: async ({ data, style, priority, responsiveness }) => {\r\n    // Mock AI dashboard creation\r\n    console.log('AI creating dashboard');\r\n    return {\r\n      grid: '1fr 1fr',\r\n      widgets: [\r\n        {\r\n          id: 'sensor-data',\r\n          title: 'Sensor Data',\r\n          dataSource: 'sensors',\r\n          visualization: 'table',\r\n          aiStyling: {\r\n            background: '#f0fdf4',\r\n            borderRadius: '12px',\r\n            padding: '16px',\r\n            shadow: '0 4px 6px rgba(0,0,0,0.1)',\r\n          },\r\n        },\r\n        {\r\n          id: 'irrigation-data',\r\n          title: 'Irrigation Data',\r\n          dataSource: 'irrigation',\r\n          visualization: 'chart',\r\n          aiStyling: {\r\n            background: '#e5e7eb',\r\n            borderRadius: '12px',\r\n            padding: '16px',\r\n            shadow: '0 4px 6px rgba(0,0,0,0.1)',\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  },\r\n};\r\n\r\nconst AIDashboard = () => {\r\n  const { data: sensorData } = useSmartAPI('sensors');\r\n  const { data: irrigationData } = useSmartAPI('irrigation');\r\n  const [dashboardLayout, setDashboardLayout] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const generateDashboard = async () => {\r\n      const layout = await aiModel.createDashboard({\r\n        data: { sensors: sensorData, irrigation: irrigationData },\r\n        style: 'modern_agricultural',\r\n        priority: 'visual_impact',\r\n        responsiveness: 'mobile_first',\r\n      });\r\n\r\n      setDashboardLayout(layout);\r\n    };\r\n\r\n    if (sensorData && irrigationData) {\r\n      generateDashboard();\r\n    }\r\n  }, [sensorData, irrigationData]);\r\n\r\n  if (!dashboardLayout) return <div>Loading...</div>;\r\n\r\n  const DashboardGrid = styled.div`\r\n    display: grid;\r\n    grid-template-columns: ${dashboardLayout.grid};\r\n    gap: 20px;\r\n    padding: 20px;\r\n  `;\r\n\r\n  const AIWidget = ({ config, data, styling }) => {\r\n    const StyledWidget = styled.div`\r\n      background: ${styling.background};\r\n      border-radius: ${styling.borderRadius};\r\n      padding: ${styling.padding};\r\n      box-shadow: ${styling.shadow};\r\n      transition: all 0.3s ease;\r\n\r\n      &:hover {\r\n        transform: scale(1.02);\r\n        box-shadow: 0 6px 8px rgba(0,0,0,0.15);\r\n      }\r\n    `;\r\n\r\n    return (\r\n      <StyledWidget>\r\n        <h2>{config.title}</h2>\r\n        {config.visualization === 'chart' ? (\r\n          <SmartChart data={data} context={config.title} />\r\n        ) : (\r\n          data && JSON.stringify(data)\r\n        )}\r\n      </StyledWidget>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <DashboardGrid>\r\n      {dashboardLayout.widgets.map(widget => (\r\n        <AIWidget\r\n          key={widget.id}\r\n          config={widget}\r\n          data={widget.dataSource === 'sensors' ? sensorData : irrigationData}\r\n          styling={widget.aiStyling}\r\n        />\r\n      ))}\r\n    </DashboardGrid>\r\n  );\r\n};\r\n\r\nexport default AIDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}