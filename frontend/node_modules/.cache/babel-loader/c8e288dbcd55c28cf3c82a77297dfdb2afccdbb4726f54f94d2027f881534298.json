{"ast":null,"code":"// Configura√ß√£o da API\nconst API_URL = 'http://127.0.0.1:5000/ask';\n\n// Elementos do DOM\nconst messagesContainer = document.getElementById('messagesContainer');\nconst userInput = document.getElementById('userInput');\nconst sendButton = document.getElementById('sendButton');\nconst chatForm = document.getElementById('chatForm');\nconst loadingIndicator = document.getElementById('loadingIndicator');\n\n// Event Listeners\ndocument.addEventListener('DOMContentLoaded', function () {\n  initializeChatbot();\n});\nfunction initializeChatbot() {\n  // Auto-resize textarea\n  userInput.addEventListener('input', function () {\n    this.style.height = 'auto';\n    this.style.height = Math.min(this.scrollHeight, 120) + 'px';\n  });\n\n  // Handle Enter key\n  userInput.addEventListener('keydown', function (e) {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  });\n\n  // Handle form submission\n  chatForm.addEventListener('submit', function (e) {\n    e.preventDefault();\n    sendMessage();\n  });\n\n  // Focus input on page load\n  userInput.focus();\n}\n\n// Fun√ß√£o para enviar sugest√µes r√°pidas\nfunction sendSuggestion(text) {\n  userInput.value = text;\n  sendMessage();\n}\n\n// Fun√ß√£o para adicionar mensagens no chat\nfunction addMessage(content, isUser = false) {\n  const messageDiv = document.createElement('div');\n  messageDiv.className = `message ${isUser ? 'user' : 'bot'}`;\n  const avatar = document.createElement('div');\n  avatar.className = 'message-avatar';\n  avatar.textContent = isUser ? 'üë§' : 'ü§ñ';\n  const messageContent = document.createElement('div');\n  messageContent.className = 'message-content';\n  messageContent.innerHTML = formatMessage(content);\n  messageDiv.appendChild(avatar);\n  messageDiv.appendChild(messageContent);\n\n  // Remove welcome message if it exists\n  const welcomeMessage = messagesContainer.querySelector('.welcome-message');\n  if (welcomeMessage) {\n    welcomeMessage.remove();\n  }\n  messagesContainer.appendChild(messageDiv);\n  scrollToBottom();\n}\n\n// Fun√ß√£o para formatar mensagem (quebras de linha, etc.)\nfunction formatMessage(content) {\n  return content.replace(/\\n/g, '<br>');\n}\n\n// Fun√ß√£o para rolar para o final do chat\nfunction scrollToBottom() {\n  messagesContainer.scrollTop = messagesContainer.scrollHeight;\n}\n\n// Fun√ß√£o para mostrar indicador de carregamento\nfunction showLoading() {\n  loadingIndicator.style.display = 'flex';\n  sendButton.disabled = true;\n  sendButton.innerHTML = '‚è≥';\n}\n\n// Fun√ß√£o para esconder indicador de carregamento\nfunction hideLoading() {\n  loadingIndicator.style.display = 'none';\n  sendButton.disabled = false;\n  sendButton.innerHTML = '‚û§';\n}\n\n// Fun√ß√£o para limpar o input\nfunction clearInput() {\n  userInput.value = '';\n  userInput.style.height = 'auto';\n}\n\n// Fun√ß√£o principal para enviar mensagem\nasync function sendMessage() {\n  const message = userInput.value.trim();\n  if (!message) return;\n\n  // Add user message\n  addMessage(message, true);\n  clearInput();\n\n  // Show loading\n  showLoading();\n  try {\n    const response = await fetch(API_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        pergunta: message\n      })\n    });\n    const data = await response.json();\n    if (response.ok) {\n      addMessage(data.resposta);\n    } else {\n      addMessage(`‚ùå Erro: ${data.erro || 'Algo deu errado. Tente novamente.'}`);\n    }\n  } catch (error) {\n    console.error('Erro na requisi√ß√£o:', error);\n    addMessage('‚ùå Erro de conex√£o. Verifique se a API est√° rodando e tente novamente.');\n  }\n  hideLoading();\n}\n\n// Fun√ß√£o para limpar todo o chat (opcional)\nfunction clearChat() {\n  messagesContainer.innerHTML = `\n        <div class=\"welcome-message\">\n            <h3>üëã Ol√°! Sou o AgroBot</h3>\n            <p>Estou aqui para ajudar com suas d√∫vidas sobre lavouras de caf√©, irriga√ß√£o, IoT e muito mais!</p>\n            <div class=\"suggestions\">\n                <div class=\"suggestion-chip\" onclick=\"sendSuggestion('Como melhorar a irriga√ß√£o do caf√©?')\">üíß Irriga√ß√£o do caf√©</div>\n                <div class=\"suggestion-chip\" onclick=\"sendSuggestion('Qual a melhor √©poca para plantar caf√©?')\">‚òï Plantio de caf√©</div>\n                <div class=\"suggestion-chip\" onclick=\"sendSuggestion('Como usar IoT na fazenda?')\">üì° IoT na agricultura</div>\n                <div class=\"suggestion-chip\" onclick=\"sendSuggestion('Dicas para economizar recursos na fazenda')\">üí∞ Economia de recursos</div>\n            </div>\n        </div>\n    `;\n}\n\n// Fun√ß√£o para verificar se a API est√° dispon√≠vel\nasync function checkAPIStatus() {\n  try {\n    const response = await fetch(API_URL.replace('/ask', '/'), {\n      method: 'GET'\n    });\n    return response.ok;\n  } catch (error) {\n    return false;\n  }\n}\n\n// Utilit√°rios adicionais\nconst ChatbotUtils = {\n  // Fun√ß√£o para salvar hist√≥rico do chat (localStorage)\n  saveHistory: function () {\n    const messages = Array.from(messagesContainer.querySelectorAll('.message')).map(msg => ({\n      content: msg.querySelector('.message-content').innerHTML,\n      isUser: msg.classList.contains('user')\n    }));\n    localStorage.setItem('agrobot-history', JSON.stringify(messages));\n  },\n  // Fun√ß√£o para carregar hist√≥rico do chat\n  loadHistory: function () {\n    const history = localStorage.getItem('agrobot-history');\n    if (history) {\n      const messages = JSON.parse(history);\n      const welcomeMessage = messagesContainer.querySelector('.welcome-message');\n      if (welcomeMessage) welcomeMessage.remove();\n      messages.forEach(msg => {\n        addMessage(msg.content, msg.isUser);\n      });\n    }\n  },\n  // Fun√ß√£o para exportar conversa\n  exportChat: function () {\n    const messages = Array.from(messagesContainer.querySelectorAll('.message')).map(msg => {\n      const isUser = msg.classList.contains('user');\n      const content = msg.querySelector('.message-content').textContent;\n      return `${isUser ? 'Usu√°rio' : 'AgroBot'}: ${content}`;\n    });\n    const chatText = messages.join('\\n\\n');\n    const blob = new Blob([chatText], {\n      type: 'text/plain'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `agrobot-conversa-${new Date().toISOString().split('T')[0]}.txt`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  }\n};","map":{"version":3,"names":["API_URL","messagesContainer","document","getElementById","userInput","sendButton","chatForm","loadingIndicator","addEventListener","initializeChatbot","style","height","Math","min","scrollHeight","e","key","shiftKey","preventDefault","sendMessage","focus","sendSuggestion","text","value","addMessage","content","isUser","messageDiv","createElement","className","avatar","textContent","messageContent","innerHTML","formatMessage","appendChild","welcomeMessage","querySelector","remove","scrollToBottom","replace","scrollTop","showLoading","display","disabled","hideLoading","clearInput","message","trim","response","fetch","method","headers","body","JSON","stringify","pergunta","data","json","ok","resposta","erro","error","console","clearChat","checkAPIStatus","ChatbotUtils","saveHistory","messages","Array","from","querySelectorAll","map","msg","classList","contains","localStorage","setItem","loadHistory","history","getItem","parse","forEach","exportChat","chatText","join","blob","Blob","type","url","URL","createObjectURL","a","href","download","Date","toISOString","split","click","removeChild","revokeObjectURL"],"sources":["C:/Users/anton/OneDrive/√Årea de Trabalho/AgroChat/projeto/frontend/src/components/Chatbot.js"],"sourcesContent":["// Configura√ß√£o da API\r\nconst API_URL = 'http://127.0.0.1:5000/ask';\r\n\r\n// Elementos do DOM\r\nconst messagesContainer = document.getElementById('messagesContainer');\r\nconst userInput = document.getElementById('userInput');\r\nconst sendButton = document.getElementById('sendButton');\r\nconst chatForm = document.getElementById('chatForm');\r\nconst loadingIndicator = document.getElementById('loadingIndicator');\r\n\r\n// Event Listeners\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    initializeChatbot();\r\n});\r\n\r\nfunction initializeChatbot() {\r\n    // Auto-resize textarea\r\n    userInput.addEventListener('input', function() {\r\n        this.style.height = 'auto';\r\n        this.style.height = Math.min(this.scrollHeight, 120) + 'px';\r\n    });\r\n\r\n    // Handle Enter key\r\n    userInput.addEventListener('keydown', function(e) {\r\n        if (e.key === 'Enter' && !e.shiftKey) {\r\n            e.preventDefault();\r\n            sendMessage();\r\n        }\r\n    });\r\n\r\n    // Handle form submission\r\n    chatForm.addEventListener('submit', function(e) {\r\n        e.preventDefault();\r\n        sendMessage();\r\n    });\r\n\r\n    // Focus input on page load\r\n    userInput.focus();\r\n}\r\n\r\n// Fun√ß√£o para enviar sugest√µes r√°pidas\r\nfunction sendSuggestion(text) {\r\n    userInput.value = text;\r\n    sendMessage();\r\n}\r\n\r\n// Fun√ß√£o para adicionar mensagens no chat\r\nfunction addMessage(content, isUser = false) {\r\n    const messageDiv = document.createElement('div');\r\n    messageDiv.className = `message ${isUser ? 'user' : 'bot'}`;\r\n    \r\n    const avatar = document.createElement('div');\r\n    avatar.className = 'message-avatar';\r\n    avatar.textContent = isUser ? 'üë§' : 'ü§ñ';\r\n    \r\n    const messageContent = document.createElement('div');\r\n    messageContent.className = 'message-content';\r\n    messageContent.innerHTML = formatMessage(content);\r\n    \r\n    messageDiv.appendChild(avatar);\r\n    messageDiv.appendChild(messageContent);\r\n    \r\n    // Remove welcome message if it exists\r\n    const welcomeMessage = messagesContainer.querySelector('.welcome-message');\r\n    if (welcomeMessage) {\r\n        welcomeMessage.remove();\r\n    }\r\n    \r\n    messagesContainer.appendChild(messageDiv);\r\n    scrollToBottom();\r\n}\r\n\r\n// Fun√ß√£o para formatar mensagem (quebras de linha, etc.)\r\nfunction formatMessage(content) {\r\n    return content.replace(/\\n/g, '<br>');\r\n}\r\n\r\n// Fun√ß√£o para rolar para o final do chat\r\nfunction scrollToBottom() {\r\n    messagesContainer.scrollTop = messagesContainer.scrollHeight;\r\n}\r\n\r\n// Fun√ß√£o para mostrar indicador de carregamento\r\nfunction showLoading() {\r\n    loadingIndicator.style.display = 'flex';\r\n    sendButton.disabled = true;\r\n    sendButton.innerHTML = '‚è≥';\r\n}\r\n\r\n// Fun√ß√£o para esconder indicador de carregamento\r\nfunction hideLoading() {\r\n    loadingIndicator.style.display = 'none';\r\n    sendButton.disabled = false;\r\n    sendButton.innerHTML = '‚û§';\r\n}\r\n\r\n// Fun√ß√£o para limpar o input\r\nfunction clearInput() {\r\n    userInput.value = '';\r\n    userInput.style.height = 'auto';\r\n}\r\n\r\n// Fun√ß√£o principal para enviar mensagem\r\nasync function sendMessage() {\r\n    const message = userInput.value.trim();\r\n    if (!message) return;\r\n\r\n    // Add user message\r\n    addMessage(message, true);\r\n    clearInput();\r\n\r\n    // Show loading\r\n    showLoading();\r\n\r\n    try {\r\n        const response = await fetch(API_URL, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                pergunta: message\r\n            })\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        if (response.ok) {\r\n            addMessage(data.resposta);\r\n        } else {\r\n            addMessage(`‚ùå Erro: ${data.erro || 'Algo deu errado. Tente novamente.'}`);\r\n        }\r\n    } catch (error) {\r\n        console.error('Erro na requisi√ß√£o:', error);\r\n        addMessage('‚ùå Erro de conex√£o. Verifique se a API est√° rodando e tente novamente.');\r\n    }\r\n\r\n    hideLoading();\r\n}\r\n\r\n// Fun√ß√£o para limpar todo o chat (opcional)\r\nfunction clearChat() {\r\n    messagesContainer.innerHTML = `\r\n        <div class=\"welcome-message\">\r\n            <h3>üëã Ol√°! Sou o AgroBot</h3>\r\n            <p>Estou aqui para ajudar com suas d√∫vidas sobre lavouras de caf√©, irriga√ß√£o, IoT e muito mais!</p>\r\n            <div class=\"suggestions\">\r\n                <div class=\"suggestion-chip\" onclick=\"sendSuggestion('Como melhorar a irriga√ß√£o do caf√©?')\">üíß Irriga√ß√£o do caf√©</div>\r\n                <div class=\"suggestion-chip\" onclick=\"sendSuggestion('Qual a melhor √©poca para plantar caf√©?')\">‚òï Plantio de caf√©</div>\r\n                <div class=\"suggestion-chip\" onclick=\"sendSuggestion('Como usar IoT na fazenda?')\">üì° IoT na agricultura</div>\r\n                <div class=\"suggestion-chip\" onclick=\"sendSuggestion('Dicas para economizar recursos na fazenda')\">üí∞ Economia de recursos</div>\r\n            </div>\r\n        </div>\r\n    `;\r\n}\r\n\r\n// Fun√ß√£o para verificar se a API est√° dispon√≠vel\r\nasync function checkAPIStatus() {\r\n    try {\r\n        const response = await fetch(API_URL.replace('/ask', '/'), {\r\n            method: 'GET',\r\n        });\r\n        return response.ok;\r\n    } catch (error) {\r\n        return false;\r\n    }\r\n}\r\n\r\n// Utilit√°rios adicionais\r\nconst ChatbotUtils = {\r\n    // Fun√ß√£o para salvar hist√≥rico do chat (localStorage)\r\n    saveHistory: function() {\r\n        const messages = Array.from(messagesContainer.querySelectorAll('.message')).map(msg => ({\r\n            content: msg.querySelector('.message-content').innerHTML,\r\n            isUser: msg.classList.contains('user')\r\n        }));\r\n        localStorage.setItem('agrobot-history', JSON.stringify(messages));\r\n    },\r\n\r\n    // Fun√ß√£o para carregar hist√≥rico do chat\r\n    loadHistory: function() {\r\n        const history = localStorage.getItem('agrobot-history');\r\n        if (history) {\r\n            const messages = JSON.parse(history);\r\n            const welcomeMessage = messagesContainer.querySelector('.welcome-message');\r\n            if (welcomeMessage) welcomeMessage.remove();\r\n            \r\n            messages.forEach(msg => {\r\n                addMessage(msg.content, msg.isUser);\r\n            });\r\n        }\r\n    },\r\n\r\n    // Fun√ß√£o para exportar conversa\r\n    exportChat: function() {\r\n        const messages = Array.from(messagesContainer.querySelectorAll('.message')).map(msg => {\r\n            const isUser = msg.classList.contains('user');\r\n            const content = msg.querySelector('.message-content').textContent;\r\n            return `${isUser ? 'Usu√°rio' : 'AgroBot'}: ${content}`;\r\n        });\r\n        \r\n        const chatText = messages.join('\\n\\n');\r\n        const blob = new Blob([chatText], { type: 'text/plain' });\r\n        const url = URL.createObjectURL(blob);\r\n        \r\n        const a = document.createElement('a');\r\n        a.href = url;\r\n        a.download = `agrobot-conversa-${new Date().toISOString().split('T')[0]}.txt`;\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        document.body.removeChild(a);\r\n        URL.revokeObjectURL(url);\r\n    }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}