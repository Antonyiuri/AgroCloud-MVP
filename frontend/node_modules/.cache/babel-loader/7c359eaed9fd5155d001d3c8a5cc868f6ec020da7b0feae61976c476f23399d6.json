{"ast":null,"code":"class AgroBotChat {\n  constructor() {\n    this.messagesContainer = document.getElementById('chatMessages');\n    this.messageInput = document.getElementById('messageInput');\n    this.sendButton = document.getElementById('sendButton');\n    this.chatForm = document.getElementById('chatForm');\n    this.loading = document.getElementById('loading');\n    this.apiUrl = 'http://127.0.0.1:5000/ask'; // URL da sua API Flask\n\n    this.initializeEventListeners();\n    this.createFloatingBeans();\n    this.messageInput.focus();\n  }\n  initializeEventListeners() {\n    this.chatForm.addEventListener('submit', e => {\n      e.preventDefault();\n      this.sendMessage();\n    });\n    this.messageInput.addEventListener('keydown', e => {\n      if (e.key === 'Enter' && !e.shiftKey) {\n        e.preventDefault();\n        this.sendMessage();\n      }\n    });\n\n    // Adiciona efeito de digitação\n    this.messageInput.addEventListener('input', function (e) {\n      if (this.value.length > 0) {\n        this.style.borderColor = '#4CAF50';\n      } else {\n        this.style.borderColor = '#e0e0e0';\n      }\n    });\n  }\n  createFloatingBeans() {\n    const beansContainer = document.querySelector('.coffee-beans');\n    const numberOfBeans = 5;\n    for (let i = 0; i < numberOfBeans; i++) {\n      setTimeout(() => {\n        const bean = document.createElement('div');\n        bean.className = 'coffee-bean';\n        bean.style.left = Math.random() * 100 + '%';\n        bean.style.animationDelay = Math.random() * 15 + 's';\n        bean.style.animationDuration = 15 + Math.random() * 10 + 's';\n        beansContainer.appendChild(bean);\n\n        // Remove o grão após a animação\n        setTimeout(() => {\n          if (bean.parentNode) {\n            bean.parentNode.removeChild(bean);\n          }\n        }, 25000);\n      }, i * 3000);\n    }\n\n    // Recria os grãos periodicamente\n    setTimeout(() => this.createFloatingBeans(), 15000);\n  }\n  async sendMessage() {\n    const message = this.messageInput.value.trim();\n    if (!message) return;\n\n    // Adiciona mensagem do usuário\n    this.addMessage(message, 'user');\n    this.messageInput.value = '';\n    this.setLoading(true);\n    try {\n      const response = await fetch(this.apiUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          pergunta: message\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        this.addMessage(data.resposta, 'bot');\n      } else {\n        this.addErrorMessage(data.erro || 'Erro desconhecido');\n      }\n    } catch (error) {\n      console.error('Erro na requisição:', error);\n      this.addErrorMessage('Erro de conexão. Verifique se a API está rodando.');\n    } finally {\n      this.setLoading(false);\n      this.messageInput.focus();\n    }\n  }\n  addMessage(content, sender) {\n    // Remove mensagem de boas-vindas se existir\n    const welcomeMessage = this.messagesContainer.querySelector('.welcome-message');\n    if (welcomeMessage) {\n      welcomeMessage.remove();\n    }\n    const messageDiv = document.createElement('div');\n    messageDiv.className = `message ${sender}`;\n    const contentDiv = document.createElement('div');\n    contentDiv.className = 'message-content';\n    contentDiv.textContent = content;\n    messageDiv.appendChild(contentDiv);\n    this.messagesContainer.appendChild(messageDiv);\n    this.scrollToBottom();\n  }\n  addErrorMessage(error) {\n    const errorDiv = document.createElement('div');\n    errorDiv.className = 'error-message';\n    errorDiv.textContent = `Erro: ${error}`;\n    this.messagesContainer.appendChild(errorDiv);\n    this.scrollToBottom();\n  }\n  setLoading(isLoading) {\n    if (isLoading) {\n      this.loading.classList.add('show');\n      this.sendButton.disabled = true;\n      this.messageInput.disabled = true;\n    } else {\n      this.loading.classList.remove('show');\n      this.sendButton.disabled = false;\n      this.messageInput.disabled = false;\n    }\n    this.scrollToBottom();\n  }\n  scrollToBottom() {\n    setTimeout(() => {\n      this.messagesContainer.scrollTop = this.messagesContainer.scrollHeight;\n    }, 100);\n  }\n}\n\n// Inicializa o chat quando a página carrega\ndocument.addEventListener('DOMContentLoaded', () => {\n  new AgroBotChat();\n});","map":{"version":3,"names":["AgroBotChat","constructor","messagesContainer","document","getElementById","messageInput","sendButton","chatForm","loading","apiUrl","initializeEventListeners","createFloatingBeans","focus","addEventListener","e","preventDefault","sendMessage","key","shiftKey","value","length","style","borderColor","beansContainer","querySelector","numberOfBeans","i","setTimeout","bean","createElement","className","left","Math","random","animationDelay","animationDuration","appendChild","parentNode","removeChild","message","trim","addMessage","setLoading","response","fetch","method","headers","body","JSON","stringify","pergunta","data","json","ok","resposta","addErrorMessage","erro","error","console","content","sender","welcomeMessage","remove","messageDiv","contentDiv","textContent","scrollToBottom","errorDiv","isLoading","classList","add","disabled","scrollTop","scrollHeight"],"sources":["C:/Users/anton/OneDrive/Área de Trabalho/AgroChat/projeto/frontend/src/components/Chatbot.js"],"sourcesContent":["class AgroBotChat {\r\n    constructor() {\r\n        this.messagesContainer = document.getElementById('chatMessages');\r\n        this.messageInput = document.getElementById('messageInput');\r\n        this.sendButton = document.getElementById('sendButton');\r\n        this.chatForm = document.getElementById('chatForm');\r\n        this.loading = document.getElementById('loading');\r\n        this.apiUrl = 'http://127.0.0.1:5000/ask'; // URL da sua API Flask\r\n        \r\n        this.initializeEventListeners();\r\n        this.createFloatingBeans();\r\n        this.messageInput.focus();\r\n    }\r\n\r\n    initializeEventListeners() {\r\n        this.chatForm.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n            this.sendMessage();\r\n        });\r\n\r\n        this.messageInput.addEventListener('keydown', (e) => {\r\n            if (e.key === 'Enter' && !e.shiftKey) {\r\n                e.preventDefault();\r\n                this.sendMessage();\r\n            }\r\n        });\r\n\r\n        // Adiciona efeito de digitação\r\n        this.messageInput.addEventListener('input', function(e) {\r\n            if (this.value.length > 0) {\r\n                this.style.borderColor = '#4CAF50';\r\n            } else {\r\n                this.style.borderColor = '#e0e0e0';\r\n            }\r\n        });\r\n    }\r\n\r\n    createFloatingBeans() {\r\n        const beansContainer = document.querySelector('.coffee-beans');\r\n        const numberOfBeans = 5;\r\n\r\n        for (let i = 0; i < numberOfBeans; i++) {\r\n            setTimeout(() => {\r\n                const bean = document.createElement('div');\r\n                bean.className = 'coffee-bean';\r\n                bean.style.left = Math.random() * 100 + '%';\r\n                bean.style.animationDelay = Math.random() * 15 + 's';\r\n                bean.style.animationDuration = (15 + Math.random() * 10) + 's';\r\n                beansContainer.appendChild(bean);\r\n\r\n                // Remove o grão após a animação\r\n                setTimeout(() => {\r\n                    if (bean.parentNode) {\r\n                        bean.parentNode.removeChild(bean);\r\n                    }\r\n                }, 25000);\r\n            }, i * 3000);\r\n        }\r\n\r\n        // Recria os grãos periodicamente\r\n        setTimeout(() => this.createFloatingBeans(), 15000);\r\n    }\r\n\r\n    async sendMessage() {\r\n        const message = this.messageInput.value.trim();\r\n        if (!message) return;\r\n\r\n        // Adiciona mensagem do usuário\r\n        this.addMessage(message, 'user');\r\n        this.messageInput.value = '';\r\n        this.setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(this.apiUrl, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    pergunta: message\r\n                })\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (response.ok) {\r\n                this.addMessage(data.resposta, 'bot');\r\n            } else {\r\n                this.addErrorMessage(data.erro || 'Erro desconhecido');\r\n            }\r\n        } catch (error) {\r\n            console.error('Erro na requisição:', error);\r\n            this.addErrorMessage('Erro de conexão. Verifique se a API está rodando.');\r\n        } finally {\r\n            this.setLoading(false);\r\n            this.messageInput.focus();\r\n        }\r\n    }\r\n\r\n    addMessage(content, sender) {\r\n        // Remove mensagem de boas-vindas se existir\r\n        const welcomeMessage = this.messagesContainer.querySelector('.welcome-message');\r\n        if (welcomeMessage) {\r\n            welcomeMessage.remove();\r\n        }\r\n\r\n        const messageDiv = document.createElement('div');\r\n        messageDiv.className = `message ${sender}`;\r\n        \r\n        const contentDiv = document.createElement('div');\r\n        contentDiv.className = 'message-content';\r\n        contentDiv.textContent = content;\r\n        \r\n        messageDiv.appendChild(contentDiv);\r\n        this.messagesContainer.appendChild(messageDiv);\r\n        \r\n        this.scrollToBottom();\r\n    }\r\n\r\n    addErrorMessage(error) {\r\n        const errorDiv = document.createElement('div');\r\n        errorDiv.className = 'error-message';\r\n        errorDiv.textContent = `Erro: ${error}`;\r\n        \r\n        this.messagesContainer.appendChild(errorDiv);\r\n        this.scrollToBottom();\r\n    }\r\n\r\n    setLoading(isLoading) {\r\n        if (isLoading) {\r\n            this.loading.classList.add('show');\r\n            this.sendButton.disabled = true;\r\n            this.messageInput.disabled = true;\r\n        } else {\r\n            this.loading.classList.remove('show');\r\n            this.sendButton.disabled = false;\r\n            this.messageInput.disabled = false;\r\n        }\r\n        this.scrollToBottom();\r\n    }\r\n\r\n    scrollToBottom() {\r\n        setTimeout(() => {\r\n            this.messagesContainer.scrollTop = this.messagesContainer.scrollHeight;\r\n        }, 100);\r\n    }\r\n}\r\n\r\n// Inicializa o chat quando a página carrega\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    new AgroBotChat();\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}