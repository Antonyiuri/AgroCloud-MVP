{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback, useEffect } from 'react';\nimport AIApiClient from '../services/AIApiClient';\nconst aiModel = {\n  determineStrategy: async ({\n    endpoint,\n    params,\n    userContext,\n    networkCondition\n  }) => {\n    // Mock AI strategy determination\n    console.log(`AI determining strategy for ${endpoint} with params:`, params);\n    return {\n      cache: false,\n      retry: 0\n    };\n  },\n  learnFromResponse: async ({\n    endpoint,\n    response,\n    userSatisfaction\n  }) => {\n    // Mock AI learning from response\n    console.log(`AI learning from response from ${endpoint}:`, response);\n  },\n  suggestFallback: async err => {\n    // Mock AI suggesting fallback\n    console.log('AI suggesting fallback for error:', err);\n    return null;\n  }\n};\nconst useSmartAPI = endpoint => {\n  _s();\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // IA decide quando fazer cache, retry, etc.\n  const smartFetch = useCallback(async params => {\n    var _navigator$connection;\n    setLoading(true);\n    const aiStrategy = await aiModel.determineStrategy({\n      endpoint: endpoint,\n      params: params,\n      userContext: 'agricultural_dashboard',\n      networkCondition: (_navigator$connection = navigator.connection) === null || _navigator$connection === void 0 ? void 0 : _navigator$connection.effectiveType\n    });\n    try {\n      const response = await AIApiClient.optimizedRequest(endpoint, params);\n      setData(response.data);\n\n      // IA aprende com a resposta para otimizar próximas chamadas\n      aiModel.learnFromResponse({\n        endpoint: endpoint,\n        response: response,\n        userSatisfaction: 'high' // baseado em métricas\n      });\n    } catch (err) {\n      setError(err);\n      // IA sugere fallbacks ou retry strategies\n      const fallback = await aiModel.suggestFallback(err);\n      if (fallback) {\n        setData(fallback);\n      }\n    }\n    setLoading(false);\n  }, [endpoint]);\n  return {\n    data,\n    loading,\n    error,\n    fetch: smartFetch\n  };\n};\n_s(useSmartAPI, \"He5UyDS3vi8K791zZjM3gRCEdIw=\");\nexport default useSmartAPI;","map":{"version":3,"names":["useState","useCallback","useEffect","AIApiClient","aiModel","determineStrategy","endpoint","params","userContext","networkCondition","console","log","cache","retry","learnFromResponse","response","userSatisfaction","suggestFallback","err","useSmartAPI","_s","data","setData","loading","setLoading","error","setError","smartFetch","_navigator$connection","aiStrategy","navigator","connection","effectiveType","optimizedRequest","fallback","fetch"],"sources":["C:/Users/anton/OneDrive/Área de Trabalho/AgroChat/projeto/frontend/src/hooks/useSmartAPI.js"],"sourcesContent":["import { useState, useCallback, useEffect } from 'react';\r\nimport AIApiClient from '../services/AIApiClient';\r\n\r\nconst aiModel = {\r\n  determineStrategy: async ({ endpoint, params, userContext, networkCondition }) => {\r\n    // Mock AI strategy determination\r\n    console.log(`AI determining strategy for ${endpoint} with params:`, params);\r\n    return {\r\n      cache: false,\r\n      retry: 0,\r\n    };\r\n  },\r\n  learnFromResponse: async ({ endpoint, response, userSatisfaction }) => {\r\n    // Mock AI learning from response\r\n    console.log(`AI learning from response from ${endpoint}:`, response);\r\n  },\r\n  suggestFallback: async (err) => {\r\n    // Mock AI suggesting fallback\r\n    console.log('AI suggesting fallback for error:', err);\r\n    return null;\r\n  },\r\n};\r\n\r\nconst useSmartAPI = (endpoint) => {\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // IA decide quando fazer cache, retry, etc.\r\n  const smartFetch = useCallback(async (params) => {\r\n    setLoading(true);\r\n\r\n    const aiStrategy = await aiModel.determineStrategy({\r\n      endpoint: endpoint,\r\n      params: params,\r\n      userContext: 'agricultural_dashboard',\r\n      networkCondition: navigator.connection?.effectiveType,\r\n    });\r\n\r\n    try {\r\n      const response = await AIApiClient.optimizedRequest(endpoint, params);\r\n      setData(response.data);\r\n\r\n      // IA aprende com a resposta para otimizar próximas chamadas\r\n      aiModel.learnFromResponse({\r\n        endpoint: endpoint,\r\n        response: response,\r\n        userSatisfaction: 'high', // baseado em métricas\r\n      });\r\n    } catch (err) {\r\n      setError(err);\r\n      // IA sugere fallbacks ou retry strategies\r\n      const fallback = await aiModel.suggestFallback(err);\r\n      if (fallback) {\r\n        setData(fallback);\r\n      }\r\n    }\r\n\r\n    setLoading(false);\r\n  }, [endpoint]);\r\n\r\n  return { data, loading, error, fetch: smartFetch };\r\n};\r\n\r\nexport default useSmartAPI;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AACxD,OAAOC,WAAW,MAAM,yBAAyB;AAEjD,MAAMC,OAAO,GAAG;EACdC,iBAAiB,EAAE,MAAAA,CAAO;IAAEC,QAAQ;IAAEC,MAAM;IAAEC,WAAW;IAAEC;EAAiB,CAAC,KAAK;IAChF;IACAC,OAAO,CAACC,GAAG,CAAC,+BAA+BL,QAAQ,eAAe,EAAEC,MAAM,CAAC;IAC3E,OAAO;MACLK,KAAK,EAAE,KAAK;MACZC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,iBAAiB,EAAE,MAAAA,CAAO;IAAER,QAAQ;IAAES,QAAQ;IAAEC;EAAiB,CAAC,KAAK;IACrE;IACAN,OAAO,CAACC,GAAG,CAAC,kCAAkCL,QAAQ,GAAG,EAAES,QAAQ,CAAC;EACtE,CAAC;EACDE,eAAe,EAAE,MAAOC,GAAG,IAAK;IAC9B;IACAR,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEO,GAAG,CAAC;IACrD,OAAO,IAAI;EACb;AACF,CAAC;AAED,MAAMC,WAAW,GAAIb,QAAQ,IAAK;EAAAc,EAAA;EAChC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACuB,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACyB,KAAK,EAAEC,QAAQ,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAM2B,UAAU,GAAG1B,WAAW,CAAC,MAAOM,MAAM,IAAK;IAAA,IAAAqB,qBAAA;IAC/CJ,UAAU,CAAC,IAAI,CAAC;IAEhB,MAAMK,UAAU,GAAG,MAAMzB,OAAO,CAACC,iBAAiB,CAAC;MACjDC,QAAQ,EAAEA,QAAQ;MAClBC,MAAM,EAAEA,MAAM;MACdC,WAAW,EAAE,wBAAwB;MACrCC,gBAAgB,GAAAmB,qBAAA,GAAEE,SAAS,CAACC,UAAU,cAAAH,qBAAA,uBAApBA,qBAAA,CAAsBI;IAC1C,CAAC,CAAC;IAEF,IAAI;MACF,MAAMjB,QAAQ,GAAG,MAAMZ,WAAW,CAAC8B,gBAAgB,CAAC3B,QAAQ,EAAEC,MAAM,CAAC;MACrEe,OAAO,CAACP,QAAQ,CAACM,IAAI,CAAC;;MAEtB;MACAjB,OAAO,CAACU,iBAAiB,CAAC;QACxBR,QAAQ,EAAEA,QAAQ;QAClBS,QAAQ,EAAEA,QAAQ;QAClBC,gBAAgB,EAAE,MAAM,CAAE;MAC5B,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZQ,QAAQ,CAACR,GAAG,CAAC;MACb;MACA,MAAMgB,QAAQ,GAAG,MAAM9B,OAAO,CAACa,eAAe,CAACC,GAAG,CAAC;MACnD,IAAIgB,QAAQ,EAAE;QACZZ,OAAO,CAACY,QAAQ,CAAC;MACnB;IACF;IAEAV,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,CAAClB,QAAQ,CAAC,CAAC;EAEd,OAAO;IAAEe,IAAI;IAAEE,OAAO;IAAEE,KAAK;IAAEU,KAAK,EAAER;EAAW,CAAC;AACpD,CAAC;AAACP,EAAA,CAvCID,WAAW;AAyCjB,eAAeA,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}