{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\AgroChat\\\\projeto\\\\frontend\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './chatbot.css';\n\n// Configura√ß√£o da API\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://127.0.0.1:5000/ask';\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesContainerRef = useRef(null);\n  useEffect(() => {\n    initializeChatbot();\n    ChatbotUtils.loadHistory();\n  }, []);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const initializeChatbot = () => {\n    var _document$getElementB;\n    // Focus input on page load\n    (_document$getElementB = document.getElementById('userInput')) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.focus();\n  };\n  const sendSuggestion = text => {\n    setUserInput(text);\n    sendMessage();\n  };\n  const addMessage = (content, isUser = false) => {\n    setMessages(prevMessages => {\n      const newMessages = [...prevMessages, {\n        content,\n        isUser\n      }];\n      return newMessages;\n    });\n  };\n  const formatMessage = content => {\n    let formattedContent = content.replace(/\\\\n/g, '<br>');\n    formattedContent = formattedContent.replace(/\\*\\*([^*]+)\\*\\*/g, '<strong>$1</strong>');\n    formattedContent = formattedContent.replace(/\\*([^*]+)\\*/g, '<em>$1</em>');\n    return formattedContent;\n  };\n  const scrollToBottom = () => {\n    var _messagesContainerRef;\n    (_messagesContainerRef = messagesContainerRef.current) === null || _messagesContainerRef === void 0 ? void 0 : _messagesContainerRef.scrollIntoView({\n      behavior: 'smooth',\n      block: 'end'\n    });\n  };\n  const showLoading = () => {\n    setIsLoading(true);\n  };\n  const hideLoading = () => {\n    setIsLoading(false);\n  };\n  const clearInput = () => {\n    setUserInput('');\n  };\n  const sendMessage = async () => {\n    const message = userInput.trim();\n    if (!message) return;\n    addMessage(message, true);\n    clearInput();\n    showLoading();\n    try {\n      const response = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          pergunta: message\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        addMessage(data.resposta);\n      } else {\n        addMessage(`‚ùå Erro: ${data.erro || 'Algo deu errado. Tente novamente.'}`);\n      }\n    } catch (error) {\n      console.error('Erro na requisi√ß√£o:', error);\n      addMessage('‚ùå Erro de conex√£o. Verifique se a API est√° rodando e tente novamente.');\n    }\n    hideLoading();\n    ChatbotUtils.saveHistory();\n  };\n  const clearChat = () => {\n    setMessages([]);\n  };\n  const checkAPIStatus = async () => {\n    try {\n      const response = await fetch(API_URL.replace('/ask', '/'), {\n        method: 'GET'\n      });\n      return response.ok;\n    } catch (error) {\n      return false;\n    }\n  };\n  const ChatbotUtils = {\n    saveHistory: () => {\n      localStorage.setItem('agrobot-history', JSON.stringify(messages));\n    },\n    loadHistory: () => {\n      const history = localStorage.getItem('agrobot-history');\n      if (history) {\n        const messages = JSON.parse(history);\n        setMessages(messages);\n      }\n    },\n    exportChat: () => {\n      const messagesToExport = messages.map(msg => {\n        return `${msg.isUser ? 'Usu√°rio' : 'AgroBot'}: ${msg.content}`;\n      });\n      const chatText = messagesToExport.join('\\n\\n');\n      const blob = new Blob([chatText], {\n        type: 'text/plain'\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `agrobot-conversa-${new Date().toISOString().split('T')[0]}.txt`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"messagesContainer\",\n      className: \"messages-container\",\n      children: [messages.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDC4B Ol\\xE1! Sou o AgroBot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Estou aqui para ajudar com suas d\\xFAvidas sobre lavouras de caf\\xE9, irriga\\xE7\\xE3o, IoT e muito mais!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggestions\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggestion-chip\",\n            onClick: () => sendSuggestion('Como melhorar a irriga√ß√£o do caf√©?'),\n            children: \"\\uD83D\\uDCA7 Irriga\\xE7\\xE3o do caf\\xE9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggestion-chip\",\n            onClick: () => sendSuggestion('Qual a melhor √©poca para plantar caf√©?'),\n            children: \"\\u2615 Plantio de caf\\xE9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggestion-chip\",\n            onClick: () => sendSuggestion('Como usar IoT na fazenda?'),\n            children: \"\\uD83D\\uDCE1 IoT na agricultura\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggestion-chip\",\n            onClick: () => sendSuggestion('Dicas para economizar recursos na fazenda'),\n            children: \"\\uD83D\\uDCB0 Economia de recursos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 25\n      }, this), messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.isUser ? 'user' : 'bot'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-avatar\",\n          children: msg.isUser ? 'üë§' : 'ü§ñ'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          dangerouslySetInnerHTML: {\n            __html: formatMessage(msg.content)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesContainerRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"chatForm\",\n      className: \"input-container\",\n      onSubmit: e => {\n        e.preventDefault();\n        sendMessage();\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"userInput\",\n          className: \"user-input\",\n          placeholder: \"Digite sua pergunta...\",\n          value: userInput,\n          onChange: e => setUserInput(e.target.value),\n          style: {\n            width: '886px',\n            height: '137px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"sendButton\",\n          type: \"submit\",\n          disabled: isLoading,\n          children: isLoading ? '‚è≥' : '‚û§'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"loadingIndicator\",\n      className: \"loading-indicator\",\n      style: {\n        display: isLoading ? 'flex' : 'none'\n      },\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 13\n  }, this);\n};\n_s(Chatbot, \"0FCJsdztxjcvhUYuYn1OO28QR6E=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","API_URL","Chatbot","_s","messages","setMessages","userInput","setUserInput","isLoading","setIsLoading","messagesContainerRef","initializeChatbot","ChatbotUtils","loadHistory","scrollToBottom","_document$getElementB","document","getElementById","focus","sendSuggestion","text","sendMessage","addMessage","content","isUser","prevMessages","newMessages","formatMessage","formattedContent","replace","_messagesContainerRef","current","scrollIntoView","behavior","block","showLoading","hideLoading","clearInput","message","trim","response","fetch","method","headers","body","JSON","stringify","pergunta","data","json","ok","resposta","erro","error","console","saveHistory","clearChat","checkAPIStatus","localStorage","setItem","history","getItem","parse","exportChat","messagesToExport","map","msg","chatText","join","blob","Blob","type","url","URL","createObjectURL","a","createElement","href","download","Date","toISOString","split","appendChild","click","removeChild","revokeObjectURL","className","children","id","length","fileName","_jsxFileName","lineNumber","columnNumber","onClick","index","dangerouslySetInnerHTML","__html","ref","onSubmit","e","preventDefault","placeholder","value","onChange","target","style","width","height","disabled","display","_c","$RefreshReg$"],"sources":["C:/Users/anton/OneDrive/√Årea de Trabalho/AgroChat/projeto/frontend/src/components/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './chatbot.css';\r\n\r\n// Configura√ß√£o da API\r\nconst API_URL = 'http://127.0.0.1:5000/ask';\r\n\r\nconst Chatbot = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [userInput, setUserInput] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const messagesContainerRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        initializeChatbot();\r\n        ChatbotUtils.loadHistory();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        scrollToBottom();\r\n    }, [messages]);\r\n\r\n    const initializeChatbot = () => {\r\n        // Focus input on page load\r\n        document.getElementById('userInput')?.focus();\r\n    };\r\n\r\n    const sendSuggestion = (text) => {\r\n        setUserInput(text);\r\n        sendMessage();\r\n    };\r\n\r\n    const addMessage = (content, isUser = false) => {\r\n        setMessages(prevMessages => {\r\n            const newMessages = [...prevMessages, { content, isUser }];\r\n            return newMessages;\r\n        });\r\n    };\r\n\r\n    const formatMessage = (content) => {\r\n        let formattedContent = content.replace(/\\\\n/g, '<br>');\r\n        formattedContent = formattedContent.replace(/\\*\\*([^*]+)\\*\\*/g, '<strong>$1</strong>');\r\n        formattedContent = formattedContent.replace(/\\*([^*]+)\\*/g, '<em>$1</em>');\r\n        return formattedContent;\r\n    };\r\n\r\n    const scrollToBottom = () => {\r\n        messagesContainerRef.current?.scrollIntoView({ behavior: 'smooth', block: 'end' });\r\n    };\r\n\r\n    const showLoading = () => {\r\n        setIsLoading(true);\r\n    };\r\n\r\n    const hideLoading = () => {\r\n        setIsLoading(false);\r\n    };\r\n\r\n    const clearInput = () => {\r\n        setUserInput('');\r\n    };\r\n\r\n    const sendMessage = async () => {\r\n        const message = userInput.trim();\r\n        if (!message) return;\r\n\r\n        addMessage(message, true);\r\n        clearInput();\r\n        showLoading();\r\n\r\n        try {\r\n            const response = await fetch(API_URL, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    pergunta: message\r\n                })\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (response.ok) {\r\n                addMessage(data.resposta);\r\n            } else {\r\n                addMessage(`‚ùå Erro: ${data.erro || 'Algo deu errado. Tente novamente.'}`);\r\n            }\r\n        } catch (error) {\r\n            console.error('Erro na requisi√ß√£o:', error);\r\n            addMessage('‚ùå Erro de conex√£o. Verifique se a API est√° rodando e tente novamente.');\r\n        }\r\n\r\n        hideLoading();\r\n        ChatbotUtils.saveHistory();\r\n    };\r\n\r\n    const clearChat = () => {\r\n        setMessages([]);\r\n    };\r\n\r\n    const checkAPIStatus = async () => {\r\n        try {\r\n            const response = await fetch(API_URL.replace('/ask', '/'), {\r\n                method: 'GET',\r\n            });\r\n            return response.ok;\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const ChatbotUtils = {\r\n        saveHistory: () => {\r\n            localStorage.setItem('agrobot-history', JSON.stringify(messages));\r\n        },\r\n        loadHistory: () => {\r\n            const history = localStorage.getItem('agrobot-history');\r\n            if (history) {\r\n                const messages = JSON.parse(history);\r\n                setMessages(messages);\r\n            }\r\n        },\r\n        exportChat: () => {\r\n            const messagesToExport = messages.map(msg => {\r\n                return `${msg.isUser ? 'Usu√°rio' : 'AgroBot'}: ${msg.content}`;\r\n            });\r\n            const chatText = messagesToExport.join('\\n\\n');\r\n\r\n            const blob = new Blob([chatText], { type: 'text/plain' });\r\n            const url = URL.createObjectURL(blob);\r\n\r\n            const a = document.createElement('a');\r\n            a.href = url;\r\n            a.download = `agrobot-conversa-${new Date().toISOString().split('T')[0]}.txt`;\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n            URL.revokeObjectURL(url);\r\n        }\r\n    };\r\n\r\n    return (\r\n        \r\n            <div className=\"chatbot-container\">\r\n                <div id=\"messagesContainer\" className=\"messages-container\">\r\n                    {messages.length === 0 && (\r\n                        <div className=\"welcome-message\">\r\n                            <h3>üëã Ol√°! Sou o AgroBot</h3>\r\n                            <p>Estou aqui para ajudar com suas d√∫vidas sobre lavouras de caf√©, irriga√ß√£o, IoT e muito mais!</p>\r\n                            <div className=\"suggestions\">\r\n                                <div className=\"suggestion-chip\" onClick={() => sendSuggestion('Como melhorar a irriga√ß√£o do caf√©?')}>üíß Irriga√ß√£o do caf√©</div>\r\n                                <div className=\"suggestion-chip\" onClick={() => sendSuggestion('Qual a melhor √©poca para plantar caf√©?')}>‚òï Plantio de caf√©</div>\r\n                                <div className=\"suggestion-chip\" onClick={() => sendSuggestion('Como usar IoT na fazenda?')}>üì° IoT na agricultura</div>\r\n                                <div className=\"suggestion-chip\" onClick={() => sendSuggestion('Dicas para economizar recursos na fazenda')}>üí∞ Economia de recursos</div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    {messages.map((msg, index) => (\r\n                        <div key={index} className={`message ${msg.isUser ? 'user' : 'bot'}`}>\r\n                            <div className=\"message-avatar\">{msg.isUser ? 'üë§' : 'ü§ñ'}</div>\r\n                            <div className=\"message-content\" dangerouslySetInnerHTML={{ __html: formatMessage(msg.content) }} />\r\n                        </div>\r\n                    ))}\r\n                    <div ref={messagesContainerRef} />\r\n                </div>\r\n                <form id=\"chatForm\" className=\"input-container\" onSubmit={(e) => { e.preventDefault(); sendMessage(); }}>\r\n                    <div className=\"input-form\">\r\n                        <textarea\r\n                            id=\"userInput\"\r\n                            className=\"user-input\"\r\n                            placeholder=\"Digite sua pergunta...\"\r\n                            value={userInput}\r\n                            onChange={(e) => setUserInput(e.target.value)}\r\n                            style={{ width: '886px', height: '137px' }}\r\n                        />\r\n                        <button id=\"sendButton\" type=\"submit\" disabled={isLoading}>\r\n                            {isLoading ? '‚è≥' : '‚û§'}\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n                <div id=\"loadingIndicator\" className=\"loading-indicator\" style={{ display: isLoading ? 'flex' : 'none' }}>\r\n                    Loading...\r\n                </div>\r\n            </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}