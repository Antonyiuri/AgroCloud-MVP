{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\AgroChat\\\\projeto\\\\frontend\\\\src\\\\components\\\\SmartInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst aiModel = {\n  generateSuggestions: async ({\n    partial,\n    context,\n    userHistory,\n    visualStyle\n  }) => {\n    // Mock AI suggestion generation\n    console.log(`AI generating suggestions for partial input ${partial}`);\n    return {\n      suggestions: ['Irrigate now', 'Check soil moisture', 'Weather forecast'],\n      visualHints: {\n        background: 'rgba(255,255,255,0.9)',\n        borderRadius: '25px',\n        borderColor: '#22c55e',\n        shadow: '0 8px 32px rgba(34,197,94,0.1)',\n        placeholder: \"Pergunte sobre irrigação...\"\n      }\n    };\n  }\n};\nconst SmartInput = ({\n  onSend\n}) => {\n  _s();\n  const [input, setInput] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [visualHints, setVisualHints] = useState({});\n  useEffect(() => {\n    const generateSmartSuggestions = async () => {\n      if (input.length > 2) {\n        const aiSuggestions = await aiModel.generateSuggestions({\n          partial: input,\n          context: 'irrigation_control',\n          userHistory: 'someUserHistory',\n          // Replace with actual user history\n          visualStyle: 'agricultural_friendly'\n        });\n        setSuggestions(aiSuggestions.suggestions);\n        setVisualHints(aiSuggestions.visualHints);\n      } else {\n        setSuggestions([]);\n        setVisualHints({});\n      }\n    };\n    const debounced = (func, delay) => {\n      let timeout;\n      return function (...args) {\n        const context = this;\n        clearTimeout(timeout);\n        timeout = setTimeout(() => func.apply(context, args), delay);\n      };\n    };\n    const debouncedGenerateSuggestions = debounced(generateSmartSuggestions, 300);\n    debouncedGenerateSuggestions();\n  }, [input]);\n  const StyledInput = styled.div`\n    position: relative;\n    background: ${visualHints.background || 'rgba(255,255,255,0.9)'};\n    border-radius: ${visualHints.borderRadius || '25px'};\n    border: 2px solid ${visualHints.borderColor || '#22c55e'};\n    padding: 16px 24px;\n    box-shadow: ${visualHints.shadow || '0 8px 32px rgba(34,197,94,0.1)'};\n    transition: all 0.3s ease;\n\n    &:focus-within {\n      transform: translateY(-2px);\n      box-shadow: 0 12px 48px rgba(34,197,94,0.2);\n    }\n  `;\n  const SuggestionList = styled.ul`\n    position: absolute;\n    top: 100%;\n    left: 0;\n    width: 100%;\n    list-style: none;\n    padding: 0;\n    margin: 0;\n    background: white;\n    border-radius: 0 0 25px 25px;\n    box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n    overflow: hidden;\n  `;\n  const SuggestionItem = styled.li`\n    padding: 10px 15px;\n    cursor: pointer;\n    &:hover {\n      background: #f0f0f0;\n    }\n  `;\n  return /*#__PURE__*/_jsxDEV(StyledInput, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: input,\n      onChange: e => setInput(e.target.value),\n      placeholder: visualHints.placeholder || \"Pergunte sobre irrigação...\",\n      style: {\n        border: 'none',\n        outline: 'none',\n        background: 'transparent',\n        width: '100%',\n        fontSize: '16px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(SuggestionList, {\n      children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(SuggestionItem, {\n        onClick: () => {\n          setInput(suggestion);\n          onSend({\n            message: suggestion\n          });\n        },\n        children: suggestion\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(SmartInput, \"m5IxSvFlVecasniicfa1eqBu2zs=\");\n_c = SmartInput;\nexport default SmartInput;\nvar _c;\n$RefreshReg$(_c, \"SmartInput\");","map":{"version":3,"names":["React","useState","useEffect","styled","jsxDEV","_jsxDEV","aiModel","generateSuggestions","partial","context","userHistory","visualStyle","console","log","suggestions","visualHints","background","borderRadius","borderColor","shadow","placeholder","SmartInput","onSend","_s","input","setInput","setSuggestions","setVisualHints","generateSmartSuggestions","length","aiSuggestions","debounced","func","delay","timeout","args","clearTimeout","setTimeout","apply","debouncedGenerateSuggestions","StyledInput","div","SuggestionList","ul","SuggestionItem","li","children","value","onChange","e","target","style","border","outline","width","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","map","suggestion","index","onClick","message","_c","$RefreshReg$"],"sources":["C:/Users/anton/OneDrive/Área de Trabalho/AgroChat/projeto/frontend/src/components/SmartInput.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst aiModel = {\r\n  generateSuggestions: async ({ partial, context, userHistory, visualStyle }) => {\r\n    // Mock AI suggestion generation\r\n    console.log(`AI generating suggestions for partial input ${partial}`);\r\n    return {\r\n      suggestions: ['Irrigate now', 'Check soil moisture', 'Weather forecast'],\r\n      visualHints: {\r\n        background: 'rgba(255,255,255,0.9)',\r\n        borderRadius: '25px',\r\n        borderColor: '#22c55e',\r\n        shadow: '0 8px 32px rgba(34,197,94,0.1)',\r\n        placeholder: \"Pergunte sobre irrigação...\",\r\n      },\r\n    };\r\n  },\r\n};\r\n\r\nconst SmartInput = ({ onSend }) => {\r\n  const [input, setInput] = useState('');\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [visualHints, setVisualHints] = useState({});\r\n\r\n  useEffect(() => {\r\n    const generateSmartSuggestions = async () => {\r\n      if (input.length > 2) {\r\n        const aiSuggestions = await aiModel.generateSuggestions({\r\n          partial: input,\r\n          context: 'irrigation_control',\r\n          userHistory: 'someUserHistory', // Replace with actual user history\r\n          visualStyle: 'agricultural_friendly',\r\n        });\r\n\r\n        setSuggestions(aiSuggestions.suggestions);\r\n        setVisualHints(aiSuggestions.visualHints);\r\n      } else {\r\n        setSuggestions([]);\r\n        setVisualHints({});\r\n      }\r\n    };\r\n\r\n    const debounced = (func, delay) => {\r\n      let timeout;\r\n      return function(...args) {\r\n        const context = this;\r\n        clearTimeout(timeout);\r\n        timeout = setTimeout(() => func.apply(context, args), delay);\r\n      };\r\n    };\r\n\r\n    const debouncedGenerateSuggestions = debounced(generateSmartSuggestions, 300);\r\n    debouncedGenerateSuggestions();\r\n  }, [input]);\r\n\r\n  const StyledInput = styled.div`\r\n    position: relative;\r\n    background: ${visualHints.background || 'rgba(255,255,255,0.9)'};\r\n    border-radius: ${visualHints.borderRadius || '25px'};\r\n    border: 2px solid ${visualHints.borderColor || '#22c55e'};\r\n    padding: 16px 24px;\r\n    box-shadow: ${visualHints.shadow || '0 8px 32px rgba(34,197,94,0.1)'};\r\n    transition: all 0.3s ease;\r\n\r\n    &:focus-within {\r\n      transform: translateY(-2px);\r\n      box-shadow: 0 12px 48px rgba(34,197,94,0.2);\r\n    }\r\n  `;\r\n\r\n  const SuggestionList = styled.ul`\r\n    position: absolute;\r\n    top: 100%;\r\n    left: 0;\r\n    width: 100%;\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n    background: white;\r\n    border-radius: 0 0 25px 25px;\r\n    box-shadow: 0 4px 8px rgba(0,0,0,0.1);\r\n    overflow: hidden;\r\n  `;\r\n\r\n  const SuggestionItem = styled.li`\r\n    padding: 10px 15px;\r\n    cursor: pointer;\r\n    &:hover {\r\n      background: #f0f0f0;\r\n    }\r\n  `;\r\n\r\n  return (\r\n    <StyledInput>\r\n      <input\r\n        value={input}\r\n        onChange={(e) => setInput(e.target.value)}\r\n        placeholder={visualHints.placeholder || \"Pergunte sobre irrigação...\"}\r\n        style={{\r\n          border: 'none',\r\n          outline: 'none',\r\n          background: 'transparent',\r\n          width: '100%',\r\n          fontSize: '16px'\r\n        }}\r\n      />\r\n      {suggestions.length > 0 && (\r\n        <SuggestionList>\r\n          {suggestions.map((suggestion, index) => (\r\n            <SuggestionItem key={index} onClick={() => {\r\n              setInput(suggestion);\r\n              onSend({ message: suggestion });\r\n            }}>{suggestion}</SuggestionItem>\r\n          ))}\r\n        </SuggestionList>\r\n      )}\r\n    </StyledInput>\r\n  );\r\n};\r\n\r\nexport default SmartInput;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}